<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

    <changeSet id="gaza-202110111255" author="Supriya">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT count(*) FROM global_property WHERE property = "webservices.rest.maxResultsDefault";
            </sqlCheck>
        </preConditions>
        <comment>Updating the global property for webservices maxResultsDefault</comment>
        <sql>
            UPDATE global_property
            SET property_value = 200
            WHERE property = "webservices.rest.maxResultsDefault";
        </sql>
    </changeSet>
    <changeSet id="gaza-202110111256" author="Supriya">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT count(*) FROM global_property WHERE property = "obs.complex_obs_dir";
            </sqlCheck>
        </preConditions>
        <comment>Update value for obs.complex_obs_dir global property</comment>
        <sql>
            update global_property set property_value = 'complex_obs' where property = 'obs.complex_obs_dir';
        </sql>
    </changeSet>
    <include file="appointment-scheduling/addServices.xml"/>
    <include file="appointment-scheduling/addProviders.xml"/>
    <include file="programs/addTraumaProgram.xml"/>
    <include file="programs/addBurnProgram.xml"/>
    <changeSet id="gaza-2021102112" author="Supriya">
    <preConditions onFail="CONTINUE">
        <sqlCheck expectedResult="0">
            SELECT count(*) FROM global_property WHERE property='emrapi.sqlSearch.activeBurnProgram';
        </sqlCheck>
    </preConditions>
    <comment/>
    <sqlFile path="programQueues/burnProgramQueue.sql"/>
  </changeSet>
    <changeSet id="gaza-2021102115" author="Supriya">
        <preConditions onFail="CONTINUE">
            <sqlCheck expectedResult="0">
                SELECT count(*) FROM global_property WHERE property='emrapi.sqlSearch.activeTraumaProgram';
            </sqlCheck>
        </preConditions>
        <comment/>
        <sqlFile path="programQueues/traumaProgramQueue.sql"/>
    </changeSet>
    <changeSet id="gaza-2021102639" author="Supriya" >
        <comment>program active Programs listing queue</comment>
        <sqlFile path="programQueues/activeProgramsQueue.sql"/>
    </changeSet>
    <changeSet id="gaza-202109011023" author="Tarun, Venky">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                select count(*) from concept_reference_source where name = "MSFOCP";
            </sqlCheck>
        </preConditions>
        <comment>Adding MSFOCP concept_reference_sources</comment>
        <sql>
            INSERT INTO concept_reference_source(name,description,hl7_code,creator,date_created,uuid) values ("MSFOCP","MSFOCP",NULL,1,now(),uuid());
        </sql>
    </changeSet>
    <changeSet id="gaza-202109011024" author="Tarun, Venky">
        <sql>
            DROP PROCEDURE IF EXISTS CREATE_REFERENCE_MAPPING_MSFOCP;
        </sql>
        <sqlFile path="utils/createProcedureForMSFOCP.sql" endDelimiter="#"/>
    </changeSet>
    <changeSet id="gaza-20200201220" author="Santhosh">
        <sql>
            DROP PROCEDURE IF EXISTS CREATE_REFERENCE_MAPPING_CEIL;
        </sql>
        <sqlFile path="utils/createProcedureForCEIL.sql" endDelimiter="#"/>
    </changeSet>
    <include file="FirstConsultation/FirstConsultation.xml"/>
    <include file="InitialMedicalAssessment/InitialMedicalAssessment.xml"/>
    <changeSet id="gaza-202111162009" author="Supriya">
        <comment>Adding upcoming and past appointments for patient</comment>
        <sqlFile path="appointment-scheduling/patientPastAppointments.sql"/>
        <sqlFile path="appointment-scheduling/patientUpcomingAppointments.sql"/>
    </changeSet>
    <include file ="addObsPathSplitterProperty.xml"/>
    <changeSet id="gaza-20211130122009" author="Supriya, Bindu">
        <preConditions onFail="CONTINUE">
            <sqlCheck expectedResult="1">
                SELECT count(*) from global_property
                where property = 'atomfeed.publish.eventsForPatientProgramStateChange';
            </sqlCheck>
        </preConditions>
        <comment>Enable publishing events for patient program state change</comment>
        <update tableName="global_property">
            <column name="property_value" value="true" />
            <where>property = 'atomfeed.publish.eventsForPatientProgramStateChange'</where>
        </update>
    </changeSet>
    <changeSet id="gaza-202112141158" author="Tarun">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT count(*) FROM global_property WHERE property = "webservices.rest.maxResultsDefault";
            </sqlCheck>
        </preConditions>
        <comment>Updating the global property for webservices maxResultsDefault</comment>
        <sql>
            UPDATE global_property
            SET property_value = 300
            WHERE property = "webservices.rest.maxResultsDefault";
        </sql>
    </changeSet>
    <changeSet id="gaza-202112141159" author="Tarun">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                select count(*) from global_property gp where property = 'patient.nameValidationRegex';
            </sqlCheck>
        </preConditions>
        <comment>Updating global property to accept apostophie in Names field in registartion page</comment>
        <sql>
            update global_property set property_value  = "^[a-zA-Z'_ ]{1,50}$.*$" where property = 'patient.nameValidationRegex';
        </sql>
    </changeSet>
    <changeSet id="add-privileges-to-role-ManageAppointments" author="Bindu">
        <comment>Add Reset Appointment Status privilege to role Appointments:ManageAppointments </comment>
        <sql>
            INSERT IGNORE INTO role_privilege (role, privilege) SELECT * FROM (SELECT 'Clinical-App-Common', 'Get Order Sets') AS tmp WHERE EXISTS ( SELECT role FROM role WHERE role = 'Clinical-App-Common' );
            INSERT IGNORE INTO role_privilege (role, privilege) SELECT * FROM (SELECT 'Registration-App', 'Delete Visits') AS tmp WHERE EXISTS ( SELECT role FROM role WHERE role = 'Registration-App' );
        </sql>
    </changeSet>
    <changeSet id="gaza-202201271633" author="Bindu">
        <preConditions onFail="CONTINUE">
            <sqlCheck expectedResult="1">
                SELECT count(*) FROM privilege WHERE privilege = "Reset Appointment Status";
            </sqlCheck>
            <sqlCheck expectedResult="1">
                SELECT count(*) FROM role WHERE role = "Appointments:ManageAppointments";
            </sqlCheck>
            <sqlCheck expectedResult="0">
                SELECT count(*) FROM role_privilege WHERE role = "Appointments:ManageAppointments" AND privilege="Reset Appointment Status";
            </sqlCheck>
        </preConditions>
        <comment>Adding Reset Appointment Status to Appointments:ManageAppointments role</comment>
        <sql>
            INSERT INTO role_privilege(role, privilege) VALUES ("Appointments:ManageAppointments", "Reset Appointment Status");
        </sql>
    </changeSet>
    <include file="radiologyUpload.xml"/>
</databaseChangeLog>
